
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap" rel="stylesheet">
    <title>Register</title>
    <style>
        /* Global reset and body styling */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(to bottom right, #2C3E50, #1A252F); /* Dark gradient background */
            color: #fff;
            height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            font-family: 'Poppins', sans-serif;
            flex-direction: column;
        }

        .container {
            background: rgba(255, 255, 255, 0.1); /* Transparent background */
            border-radius: 15px;
            padding: 40px;
            backdrop-filter: blur(10px); /* Frosted glass effect */
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2); /* Soft shadow for depth */
            width: 100%;
            max-width: 400px;
            border: 1px solid rgba(255, 255, 255, 0.2); /* Light border */
        }

        h1 {
            color: #f39c12; /* Bright orange */
            text-align: center;
            margin-bottom: 20px;
        }

        h2 {
            text-align: center;
            margin-bottom: 20px;
            color: white;
            font-size: 28px;
            font-weight: bold;
        }

        input,
        select {
            width: 100%;
            padding: 15px;
            margin-bottom: 20px;
            border: 1px solid rgba(255, 255, 255, 0.3); /* Subtle border */
            border-radius: 12px;
            background-color: rgba(0, 0, 0, 0.2); /* Semi-transparent background */
            color: black;
            font-size: 16px;
            outline: none;
            transition: border-color 0.3s, background-color 0.3s;
        }

        .select {
            background-color: rgba(255, 255, 255, 0.2); /* Ensure dropdown is visible */
            color: black; /* Dark text for better contrast */
        }

        input:focus,
        select:focus {
            border-color: #f39c12; /* Orange border on focus */
            background-color: rgba(255, 255, 255, 0.3); /* Focus effect */
            color: black;
        }

        .register-button {
            width: 100%;
            padding: 15px;
            background: #e67e22; /* Orange button */
            color: white;
            border: none;
            border-radius: 12px;
            cursor: pointer;
            font-size: 16px;
            font-weight: bold;
            transition: background-color 0.3s;
        }

        .register-button:hover {
            background-color: #d35400; /* Darker orange on hover */
            color: white;
        }

        .icon {
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .icon img {
            width: 100px;
            height: auto;
        }

        .bck {
            width: 80px;
            padding: 15px;
            display: block;
            margin-top: 15px;
            font-size: 0.9rem;
            color: #f39c12; /* Orange color */
            text-decoration: none;
            align-self: center;
        }

        .baackk {
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .bck i {
            margin-right: 7px;
            font-weight: 900;
        }

        @media (max-width: 480px) {
            .container {
                width: 90%;
            }
        }
    </style>
</head>

<body>
    <div class="container">
        <div class="icon">
            <img src="https://i.imgur.com/NfTte8r.jpeg" alt="Placement Logo">
          </div>
          <h1>Welcome to Smart Placement Hub</h1>
        <!-- <h2>Register</h2> -->
        <form action="/register" method="POST">
            <input type="text" name="username" placeholder="Username" required>
            <input type="email" name="email" placeholder="Email" required>
            <input type="password" name="password" placeholder="Password" required>
            <select name="role" class="select" required>
                <option value="">Select Role</option>
                <option value="student">Student</option>
                <option value="teacher">Teacher</option>
                <option value="parent">Parent</option>
                <option value="crc">CRC</option>
            </select>
            <div id="role-specific-fields"></div> <!-- Dynamic field container -->
            <button type="submit" class="register-button">Register</button>
            <div class="baackk">
                
    <a href="/" class="bck"><i class="fa-solid fa-arrow-left-long"></i>Back</a>
            </div>
        </form>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const roleSelect = document.querySelector('select[name="role"]');
            const roleSpecificFields = document.getElementById('role-specific-fields');

            // Branch options
            const branches = [
                "CSE",
                "CSE DS",
                "CDE AI",
                "CSE IOT",
                "IT",
                "MCA"
            ];

            roleSelect.addEventListener("change", () => {
                // Clear any existing role-specific fields
                roleSpecificFields.innerHTML = '';

                if (roleSelect.value === "student") {
                    // Roll Number Field
                    const rollNumberInput = document.createElement("input");
                    rollNumberInput.type = "text";
                    rollNumberInput.name = "rollNumber";
                    rollNumberInput.placeholder = "Enter Roll Number";
                    rollNumberInput.required = true;
                    roleSpecificFields.appendChild(rollNumberInput);

                    // Branch Dropdown
                    const branchSelect = document.createElement("select");
                    branchSelect.name = "branch";
                    branchSelect.required = true;

                    // Default option
                    const defaultOption = document.createElement("option");
                    defaultOption.value = "";
                    defaultOption.textContent = "Select Branch";
                    defaultOption.disabled = true;
                    defaultOption.selected = true;
                    branchSelect.appendChild(defaultOption);

                    // Branch options
                    branches.forEach(branch => {
                        const option = document.createElement("option");
                        option.value = branch;
                        option.textContent = branch;
                        branchSelect.appendChild(option);
                    });

                    roleSpecificFields.appendChild(branchSelect);
                }

                if (roleSelect.value === "parent") {
                    // Student Roll Number Field
                    const rollNumberInput = document.createElement("input");
                    rollNumberInput.type = "text";
                    rollNumberInput.name = "studentRollNumber";
                    rollNumberInput.placeholder = "Enter Your Child's Roll Number";
                    rollNumberInput.required = true;
                    roleSpecificFields.appendChild(rollNumberInput);

                    // Student Branch Dropdown
                    const branchSelect = document.createElement("select");
                    branchSelect.name = "studentBranch";
                    branchSelect.required = true;

                    // Default option
                    const defaultOption = document.createElement("option");
                    defaultOption.value = "";
                    defaultOption.textContent = "Select Your Child's Branch";
                    defaultOption.disabled = true;
                    defaultOption.selected = true;
                    branchSelect.appendChild(defaultOption);

                    // Branch options
                    branches.forEach(branch => {
                        const option = document.createElement("option");
                        option.value = branch;
                        option.textContent = branch;
                        branchSelect.appendChild(option);
                    });

                    roleSpecificFields.appendChild(branchSelect);
                }
            });
        });
        
    </script>

</html>